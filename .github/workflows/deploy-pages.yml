name: Deploy to GitHub Pages

on:
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deploy even if no changes detected'
        required: false
        type: boolean
        default: false
  push:
    branches:
      - main
    paths:
      - 'outputs/digest-*.md'
  workflow_run:
    workflows: ["Run AI Digest Agent Daily"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Check for changes
      id: check_changes
      run: |
        if [ -d "outputs" ] && [ "$(ls -A outputs/digest-*.md 2>/dev/null)" ]; then
          echo "changes=true" >> $GITHUB_OUTPUT
        else
          echo "changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Copy to GitHub Pages branch
      if: ${{ steps.check_changes.outputs.changes == 'true' || inputs.force_deploy == true }}
      run: |
        mkdir -p publish
        # Remove any old .nojekyll if it exists
        rm -f publish/.nojekyll

        # Collect all digest files
        DIGEST_FILES=$(ls outputs/digest-*.md | sort)

        # Find latest digest
        LATEST_FILE=$(echo "$DIGEST_FILES" | tail -n 1)
        LATEST_BASENAME=$(basename "$LATEST_FILE")

        # Write _config.yml to enable Jekyll and styling
        echo "title: AI Digest" > publish/_config.yml
        echo "theme: minima" >> publish/_config.yml
        echo "markdown: kramdown" >> publish/_config.yml
        echo "description: ''" >> publish/_config.yml

        # Generate index.md with frontmatter and sidebar
        echo "---" > publish/index.md
        echo "layout: default" >> publish/index.md
        echo "title: AI Digest Portal" >> publish/index.md
        echo "---" >> publish/index.md
        echo "" >> publish/index.md

        echo "# ðŸ“° AI Digest Portal" >> publish/index.md
        echo "" >> publish/index.md
        echo "## ðŸ“… Archive" >> publish/index.md

        for f in $DIGEST_FILES; do
          fname=$(basename "$f")
          echo "- [${fname%.md}]($fname)" >> publish/index.md
        done

        echo "" >> publish/index.md
        echo "---" >> publish/index.md
        echo "## ðŸ§  Latest Digest" >> publish/index.md
        echo "" >> publish/index.md
        cat "$LATEST_FILE" >> publish/index.md

        # Copy and add frontmatter to each digest file
        for f in $DIGEST_FILES; do
          fname=$(basename "$f")
          date_title=$(echo "$fname" | sed 's/digest-//' | sed 's/.md//')
          echo "---" > "publish/$fname"
          echo "layout: default" >> "publish/$fname"
          echo "title: AI Digest - $date_title" >> "publish/$fname"
          echo "---" >> "publish/$fname"
          echo "" >> "publish/$fname"
          cat "$f" >> "publish/$fname"
        done
        rm -f publish/.nojekyll

    - name: Deploy to gh-pages
      if: ${{ steps.check_changes.outputs.changes == 'true' || inputs.force_deploy == true }}
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: publish

    - name: Skip deployment
      if: ${{ steps.check_changes.outputs.changes == 'false' && inputs.force_deploy == false }}
      run: echo "No digest files found to deploy. Skipping deployment." 